/**
 * Module dependencies.
 */

var express = require('express');
var routes = require('./routes');
var http = require('http');
var path = require('path');
//var MongoStore = require('connect-mongo')(express);
var MemoryStore = require('express/node_modules/connect/lib/middleware/session/memory');
var settings = require('./settings');
var flash = require('connect-flash');
var db=require('./models/db.js');
var fs = require('fs');
var accessLog = fs.createWriteStream('access.log', {flags: 'a'});
var errorLog = fs.createWriteStream('error.log', {flags: 'a'});

var bodyParser = require('body-parser');
var ueditor = require('ueditor');

var storeMemory = new MemoryStore({
  reapInterval: 300 * 1000,
});


var app = express();




// all environments
app.set('port', 18080);
app.set('views', __dirname + '/views');
app.set('view engine', 'ejs');
app.use(flash());
app.use(express.favicon(__dirname + '/public/images/favicon.ico'));
app.use(express.logger('dev'));
app.use(express.logger({stream: accessLog}));
app.use(express.bodyParser({ keepExtensions: true, uploadDir: './public/headers' }));
app.use(express.methodOverride());
app.use(express.cookieParser());
app.use(express.session({
  secret: settings.cookieSecret,
  store: storeMemory
}));

app.use(bodyParser.urlencoded({
  extended: true
}));
app.use(bodyParser.json());

app.use(app.router);
app.use(express.static(path.join(__dirname, 'public')));



//app.dynamicHelpers
app.use(function(req,res,next){
  res.locals.headers = req.headers;
  var error = req.flash('error');
  var success = req.flash('success');
  res.locals.user = req.session.user;
  res.locals.error = error.length ? error : null;
  res.locals.success = success ? success : null;
  next();
});
// development only
if ('development' == app.get('env')) {
  app.use(express.errorHandler());
}

/*http.createServer(app).listen(app.get('port'), function(){
  console.log('Express server listening on port ' + app.get('port'));
});*/

http.createServer(app).listen(app.get('port'), function(){
  console.log('Express server listening on port ' + app.get('port'));
});



routes(app);